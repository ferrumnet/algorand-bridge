#pragma version 6
txn ApplicationID
int 0
==
bnz main_l30
txn OnCompletion
int NoOp
==
bnz main_l7
txn OnCompletion
int UpdateApplication
==
bnz main_l6
txn OnCompletion
int DeleteApplication
==
bnz main_l5
err
main_l5:
int 1
return
main_l6:
int 0
return
main_l7:
txna ApplicationArgs 0
byte "setup"
==
bnz main_l29
txna ApplicationArgs 0
byte "add-signer"
==
bnz main_l28
txna ApplicationArgs 0
byte "remove-signer"
==
bnz main_l27
txna ApplicationArgs 0
byte "set-fee-distributor"
==
bnz main_l26
txna ApplicationArgs 0
byte "set-fee"
==
bnz main_l25
txna ApplicationArgs 0
byte "allow-target"
==
bnz main_l24
txna ApplicationArgs 0
byte "disallow-target"
==
bnz main_l23
txna ApplicationArgs 0
byte "add-liquidity"
==
bnz main_l22
txna ApplicationArgs 0
byte "remove-liquidity"
==
bnz main_l21
txna ApplicationArgs 0
byte "swap"
==
bnz main_l20
txna ApplicationArgs 0
byte "withdraw"
==
bnz main_l19
err
main_l19:
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txn Sender
txna ApplicationArgs 3
txna ApplicationArgs 4
txna ApplicationArgs 5
btoi
callsub withdrawtoken_4
int 1
return
main_l20:
txn Sender
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
txna ApplicationArgs 5
callsub swaptoken_3
int 1
return
main_l21:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub removeliquidity_12
int 1
return
main_l22:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub addliquidity_11
int 1
return
main_l23:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub disallowtarget_10
int 1
return
main_l24:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
callsub allowtarget_9
int 1
return
main_l25:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub setfee_8
int 1
return
main_l26:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna Accounts 1
callsub setfeedistributor_7
int 1
return
main_l27:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
callsub removesigner_6
int 1
return
main_l28:
txn Sender
byte "application_admin"
app_global_get
==
assert
txna ApplicationArgs 1
callsub addsigner_5
int 1
return
main_l29:
txn Sender
byte "application_admin"
app_global_get
==
assert
byte "token"
app_global_get
int 0
global CurrentApplicationAddress
callsub executeassettransfer_1
int 1
return
main_l30:
global GroupSize
int 1
==
assert
byte "bridge_fee"
txna ApplicationArgs 0
btoi
app_global_put
byte "token"
txna ApplicationArgs 1
btoi
app_global_put
byte "application_admin"
txn Sender
app_global_put
int 1
return

// eth_ecdsa_recover
ethecdsarecover_0:
store 21
store 20
load 21
len
int 65
==
assert
load 20
len
int 32
==
assert
int 2500
int 10
+
store 22
ethecdsarecover_0_l1:
load 22
global OpcodeBudget
>
bz ethecdsarecover_0_l3
itxn_begin
int appl
itxn_field TypeEnum
int DeleteApplication
itxn_field OnCompletion
byte 0x068101
itxn_field ApprovalProgram
byte 0x068101
itxn_field ClearStateProgram
itxn_submit
b ethecdsarecover_0_l1
ethecdsarecover_0_l3:
load 21
extract 32 32
byte 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0
b<=
assert
load 21
extract 64 1
btoi
int 27
-
int 0
==
load 21
extract 64 1
btoi
int 27
-
int 1
==
||
assert
load 20
load 21
extract 64 1
btoi
int 27
-
load 21
extract 0 32
load 21
extract 32 32
ecdsa_pk_recover Secp256k1
store 24
store 23
load 23
load 24
concat
keccak256
extract 12 20
retsub

// execute_asset_transfer
executeassettransfer_1:
store 2
store 1
store 0
itxn_begin
int axfer
itxn_field TypeEnum
load 0
itxn_field XferAsset
load 1
itxn_field AssetAmount
load 2
itxn_field AssetReceiver
int 0
itxn_field Fee
itxn_submit
retsub

// is_asset_transfered
isassettransfered_2:
store 11
store 10
global GroupSize
int 2
==
gtxn 0 TypeEnum
int axfer
==
&&
gtxn 0 XferAsset
load 10
==
&&
gtxn 0 Sender
txn Sender
==
&&
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
&&
gtxn 0 AssetAmount
load 11
==
&&
assert
retsub

// swap_token
swaptoken_3:
store 8
store 7
store 6
store 5
store 4
store 3
load 3
global ZeroAddress
!=
assert
load 5
int 0
>
assert
load 6
int 0
>
assert
byte "allowed_targets"
load 4
itob
concat
load 6
itob
concat
app_global_get
store 9
byte "target_token"
load 9
app_global_put
byte "target_token"
app_global_get
load 7
==
assert
load 4
load 5
callsub isassettransfered_2
retsub

// withdraw_token
withdrawtoken_4:
store 17
store 16
store 15
store 14
store 13
store 12
load 13
int 0
!=
assert
byte "signed_message"
load 15
app_global_put
byte "used_hash"
load 15
concat
app_global_get
int 1
!=
assert
byte "signer"
load 15
load 16
callsub ethecdsarecover_0
app_global_put
byte "used_hash"
load 15
concat
int 1
app_global_put
load 13
store 19
load 13
load 12
itob
byte "fees"
concat
app_global_get
*
int 10000
/
store 18
load 19
load 18
-
store 19
byte "tax"
load 18
app_global_put
load 18
int 0
!=
bz withdrawtoken_4_l2
load 12
load 19
byte "fee_distributor"
app_global_get
callsub executeassettransfer_1
withdrawtoken_4_l2:
load 12
load 19
load 14
callsub executeassettransfer_1
retsub

// add_signer
addsigner_5:
store 25
byte "signers"
load 25
concat
int 1
app_global_put
retsub

// remove_signer
removesigner_6:
store 26
byte "signers"
load 26
concat
app_global_del
retsub

// set_fee_distributor
setfeedistributor_7:
store 27
byte "fee_distributor"
load 27
app_global_put
retsub

// set_fee
setfee_8:
store 29
store 28
load 29
byte "bridge_fee"
app_global_get
<=
assert
load 28
itob
byte "fees"
concat
load 29
app_global_put
retsub

// allow_target
allowtarget_9:
store 32
store 31
store 30
load 31
int 0
>
assert
byte "allowed_targets"
load 30
itob
concat
load 31
itob
concat
load 32
app_global_put
retsub

// disallow_target
disallowtarget_10:
store 34
store 33
load 34
int 0
>
assert
byte "allowed_targets"
load 33
itob
concat
load 34
itob
concat
app_global_del
retsub

// add_liquidity
addliquidity_11:
store 36
store 35
load 36
int 0
!=
assert
load 35
load 36
callsub isassettransfered_2
byte "liquidities"
load 35
itob
concat
txn Sender
concat
byte "liquidities"
load 35
itob
concat
txn Sender
concat
app_global_get
load 36
+
app_global_put
retsub

// remove_liquidity
removeliquidity_12:
store 38
store 37
load 38
int 0
!=
assert
byte "liquidities"
load 37
itob
concat
txn Sender
concat
app_global_get
store 39
load 39
load 38
>=
assert
global CurrentApplicationAddress
load 37
asset_holding_get AssetBalance
store 43
store 42
load 43
assert
load 42
store 41
load 41
load 38
>
bnz removeliquidity_12_l4
load 41
store 40
removeliquidity_12_l2:
byte "liquidities"
load 37
itob
concat
txn Sender
concat
byte "liquidities"
load 37
itob
concat
txn Sender
concat
app_global_get
load 40
-
app_global_put
load 40
int 0
!=
bz removeliquidity_12_l5
load 37
load 40
txn Sender
callsub executeassettransfer_1
b removeliquidity_12_l5
removeliquidity_12_l4:
load 38
store 40
b removeliquidity_12_l2
removeliquidity_12_l5:
retsub
